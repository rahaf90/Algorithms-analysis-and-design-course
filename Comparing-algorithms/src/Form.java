
import javax.swing.text.JTextComponent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author rahafhamed
 */
public class Form extends javax.swing.JFrame {

    String text = "\"For me, the best book quotes of all time are the ones that are there for me when I need them, whether it's the happiest day of my life or the hardest one.\"\n"
            + "                 \" They're words of advice or inspiration, bits of rare beauty, or even raw moments of pain that are so perfectly expressed, they become unforgettable.\"\n"
            + "                 \" They can be intimate expressions of love or brutal confessions of the truth, the perfect scene painted in with words,\"\n"
            + "                 \" or the deepest emotion rendered in a sentence.From children's books to literary fiction to nonfiction, every genre is filled with great book quotes that strike a chord in your heart and just stick with you.\";\n"
            + "      \n";

    String the_pattern;

    /**
     * Creates new form Form
     */
    public Form() {

        initComponents();

        textArea.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchAlgo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        bruteforce = new javax.swing.JRadioButton();
        boyer = new javax.swing.JRadioButton();
        KMP = new javax.swing.JRadioButton();
        Rabinkarp = new javax.swing.JRadioButton();
        Pattern1 = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        SearchTime = new javax.swing.JLabel();
        Matches = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Select algorithm type"));

        SearchAlgo.add(bruteforce);
        bruteforce.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bruteforce.setText("Brute-force");
        bruteforce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bruteforceActionPerformed(evt);
            }
        });

        SearchAlgo.add(boyer);
        boyer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        boyer.setText("Boyer-moore ");
        boyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boyerActionPerformed(evt);
            }
        });

        SearchAlgo.add(KMP);
        KMP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        KMP.setText(" Knuth–Morris–Pratt ");
        KMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KMPActionPerformed(evt);
            }
        });

        SearchAlgo.add(Rabinkarp);
        Rabinkarp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Rabinkarp.setText("Rabin-Karp");
        Rabinkarp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RabinkarpActionPerformed(evt);
            }
        });

        Pattern1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Pattern1.setToolTipText("Search pattern");
        Pattern1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pattern1ActionPerformed(evt);
            }
        });

        Search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(bruteforce)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boyer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KMP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Rabinkarp))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Pattern1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(Search)))
                .addGap(99, 99, 99))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bruteforce)
                    .addComponent(boyer)
                    .addComponent(KMP)
                    .addComponent(Rabinkarp))
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Search)
                    .addComponent(Pattern1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        textArea.setRows(5);
        textArea.setTabSize(18);
        textArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(textArea);

        SearchTime.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        SearchTime.setText("Search Time: ");

        Matches.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Matches.setText("Matches:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(SearchTime)
                                .addGap(31, 31, 31)
                                .addComponent(Matches)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTime)
                    .addComponent(Matches))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        if (Pattern1.getText() == null || Pattern1.getText().trim().isEmpty()) {
            return;

        }

        int NumofWords = 0;
        long start = 0, end = 0, runtime;
        if (boyer.isSelected()) {
            start = System.currentTimeMillis();

            NumofWords = Boyer_Moore_Algorithm.search(textArea, Pattern1.getText());

            end = System.currentTimeMillis();

            runtime = end - start;

            SearchTime.setText("Search Time: " + runtime + "ms");
            Matches.setText("Matches: " + NumofWords);
        } else if (bruteforce.isSelected()) {
            start = System.currentTimeMillis();

            NumofWords = Brute_force.Search(textArea, Pattern1.getText());

            end = System.currentTimeMillis();
            runtime = end - start;
            SearchTime.setText("Search Time:  " + runtime + "ms");
            Matches.setText("Matches: " + NumofWords);
        } else if (KMP.isSelected()) {
            start = System.currentTimeMillis();

            NumofWords = KMPAlgo.KMPSearch(textArea, Pattern1.getText());

            end = System.currentTimeMillis();
            runtime = end - start;
            SearchTime.setText("Search Time:  " + runtime + "ms");
            Matches.setText("Matches: " + NumofWords);
        } else if (Rabinkarp.isSelected()) {
            start = System.currentTimeMillis();

            NumofWords = Rabin_Karp.search(textArea, Pattern1.getText(), 101);

            end = System.currentTimeMillis();
            runtime = end - start;
            SearchTime.setText("Search Time:  " + runtime + "ms");
            Matches.setText("Matches: " + NumofWords);
        }

    }//GEN-LAST:event_SearchActionPerformed

    private void Pattern1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pattern1ActionPerformed
        Pattern1.getText();
    }//GEN-LAST:event_Pattern1ActionPerformed

    private void boyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boyerActionPerformed

    }//GEN-LAST:event_boyerActionPerformed

    private void RabinkarpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RabinkarpActionPerformed


    }//GEN-LAST:event_RabinkarpActionPerformed

    private void KMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KMPActionPerformed

    }//GEN-LAST:event_KMPActionPerformed

    private void bruteforceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bruteforceActionPerformed


    }//GEN-LAST:event_bruteforceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton KMP;
    private javax.swing.JLabel Matches;
    private javax.swing.JTextField Pattern1;
    private javax.swing.JRadioButton Rabinkarp;
    private javax.swing.JButton Search;
    private javax.swing.ButtonGroup SearchAlgo;
    private javax.swing.JLabel SearchTime;
    private javax.swing.JRadioButton boyer;
    private javax.swing.JRadioButton bruteforce;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
